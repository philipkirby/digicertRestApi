FROM golang:latest

#Label
LABEL authors="philip"

# Set the working dir
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy files
COPY . .

# Build
RUN go build -o main .

# Expose port
EXPOSE 8080

# Run
CMD ["./main"]

///

# Stage 1: Build the Go binary
FROM golang:1.17-alpine AS build

WORKDIR /app

COPY . .

RUN go build -o myapp cmd/main.go

# Stage 2: Create a minimal image with Alpine Linux
FROM alpine:latest

WORKDIR /app

# Copy only the necessary files from the build stage
COPY --from=build /app/myapp /app/

# Run the binary
CMD ["./myapp"]

///

FROM golang:latest
#Label
LABEL authors="philip"

# Set the working dir
WORKDIR /app

RUN apk add libc6-compat

# Copy binary
COPY dockerrestapi ./

# Expose port
EXPOSE 8081

# Run
CMD ["./dockerrestapi"]
